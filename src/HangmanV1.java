import java.io.IOException;import java.nio.file.Files;import java.nio.file.Paths;import java.util.ArrayList;import java.util.List;import java.util.Random;import java.util.Scanner;public class HangmanV1 {	public static void main(String [] args) {        HangmanV1 hangman = new HangmanV1();        List<String> phraseList=null;        // Get the phrase from a file of phrases        try {            phraseList = Files.readAllLines(Paths.get("words.txt"));        } catch (IOException e) {            System.out.println(e);        }        Random random=new Random();        int i1=random.nextInt(phraseList.size());        StringBuilder phrase;        phrase = new StringBuilder(phraseList.get(i1));        String lowPhrase="";        for(int i=0;i<phrase.length();i++){            lowPhrase+=Character.toLowerCase(phrase.charAt(i));        }        System.out.println(phrase);//        generate hidden code        StringBuilder hiddenCode=new StringBuilder();        int totalLetters=0;        for(int j=0;j<phrase.length();j++){            if(Character.isLetter(phrase.charAt(j))==true){                hiddenCode.append('*');                totalLetters++;            }else{                hiddenCode.append(phrase.charAt(j));            }        }        System.out.println(hiddenCode);//        get player's input        Scanner scanner;        scanner=new Scanner(System.in);//        play game        int correctLetters=0;        int misses=0;        int TOTALCHANCES=5;        int chancesLeft=TOTALCHANCES;        ArrayList<Character> preMissed= new ArrayList<>();        ArrayList<Character> preCorrect=new ArrayList<>();        ArrayList<Character> preGuesses=new ArrayList<>();        while (chancesLeft>0){            String str1="";            while(str1.length()!=1){                System.out.println("Please guess a letter: ");                str1=scanner.next();            }            char guess;            guess=str1.charAt(0);            if(!Character.isLetter(guess)){                System.out.println("You don't input a letter");                continue;            }            char lowGuess=Character.toLowerCase(guess);            if(preMissed.contains(lowGuess)){                System.out.println("Please do not enter the wrong letter repeatedly!!!");                continue;            }            if(preCorrect.contains(lowGuess)){                System.out.println("Please do not enter the correct letter repeatedly!!!");                continue;            }            if(lowPhrase.indexOf(lowGuess)==-1){                misses++;                chancesLeft--;                preMissed.add(lowGuess);                System.out.println("Sorry, you missed");                }else{                //        update new hidden phrase                preCorrect.add(lowGuess);                for(int i=0;i<phrase.length();i++){                    if(lowGuess==lowPhrase.charAt(i)){                        correctLetters++;                        hiddenCode.setCharAt(i,phrase.charAt(i));                    }                }            }            preGuesses.add(lowGuess);            System.out.println("Misses: "+misses);            System.out.println("Previous misses: "+preMissed);            System.out.println("Chances left: "+chancesLeft);            System.out.println("previous guesses"+preGuesses);            System.out.println(hiddenCode);            if(correctLetters==totalLetters){                break;            }        }        if(correctLetters==totalLetters){            System.out.println("Congratulation! You win!!!");        }else{            System.out.println("Sorry, You lose!!!");            System.out.println("The correct answer is "+phrase);        }    }}